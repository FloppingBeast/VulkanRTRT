lawrence.winters@digipen.edu
CS398 Project 1

GLFW required extensions:
VK_KHR_surface
VK_KHR_win32_surface

InstanceLayer count: 16
VK_LAYER_NV_optimus
VK_LAYER_EOS_Overlay
VK_LAYER_OW_OVERLAY
VK_LAYER_OW_OBS_HOOK
VK_LAYER_VALVE_steam_overlay
VK_LAYER_VALVE_steam_fossilize
VK_LAYER_OBS_HOOK
VK_LAYER_ROCKSTAR_GAMES_social_club
VK_LAYER_LUNARG_api_dump
VK_LAYER_LUNARG_gfxreconstruct
VK_LAYER_KHRONOS_synchronization2
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_monitor
VK_LAYER_LUNARG_screenshot
VK_LAYER_KHRONOS_profiles
VK_LAYER_KHRONOS_shader_object

InstanceExtensions count: 16
VK_KHR_device_group_creation
VK_KHR_external_fence_capabilities
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore_capabilities
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_surface
VK_KHR_surface_protected_capabilities
VK_KHR_win32_surface
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_surface_maintenance1
VK_EXT_swapchain_colorspace
VK_NV_external_memory_capabilities
VK_KHR_portability_enumeration
VK_LUNARG_direct_driver_loading

1 devices
GPU Accepted:
	NVIDIA GeForce RTX 3090

QueueFamily count: 6
Queue Index: 0, VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT (7)
Queue Index: 1, VK_QUEUE_TRANSFER_BIT (4)
Queue Index: 2, VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT (6)
Queue Index: 3, VK_QUEUE_TRANSFER_BIT (4)
Queue Index: 4, VK_QUEUE_TRANSFER_BIT (4)
Queue Index: 5, VK_QUEUE_TRANSFER_BIT (4)
Index 0 has the three required flags

CreateDevice pNext chain:
 	pNext:                          VkPhysicalDeviceFeatures2 = 000000F53090E380:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2 (1000059000)
            pNext:                          void* = VkPhysicalDeviceVulkan11Features
            
        pNext:                          VkPhysicalDeviceVulkan11Features = 000000F53090E320:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES (49)            
	    pNext:                          void* = VkPhysicalDeviceVulkan12Features
            
        pNext:                          VkPhysicalDeviceVulkan12Features = 000000F53090E230:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES (51)            
	    pNext:                          void* = VkPhysicalDeviceVulkan13Features
            
        pNext:                          VkPhysicalDeviceVulkan13Features = 000000F53090E1C0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES (53)            
	    pNext:                          void* = VkPhysicalDeviceAccelerationStructureFeaturesKHR

        pNext:                          VkPhysicalDeviceAccelerationStructureFeaturesKHR = 000000F53090E178:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR (1000150013)
            pNext:                          void* = VkPhysicalDeviceRayTracingPipelineFeaturesKHR

        pNext:                          VkPhysicalDeviceRayTracingPipelineFeaturesKHR = 000000F53090E138:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR (1000347000)
            pNext:                          void* = NULL

Present Modes: 4
	VK_PRESENT_MODE_IMMEDIATE_KHR
	VK_PRESENT_MODE_MAILBOX_KHR
	VK_PRESENT_MODE_FIFO_KHR
    	VK_PRESENT_MODE_FIFO_RELAXED_KHR

Surface Formats | Color Spaces (5 total pairs)
	VK_FORMAT_B8G8R8A8_UNORM (44) 		| VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
	VK_FORMAT_B8G8R8A8_SRGB  (50)         	| VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
	VK_FORMAT_R8G8B8A8_UNORM (37)          	| VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
	VK_FORMAT_R8G8B8A8_SRGB  (43) 		| VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
	VK_FORMAT_A2B10G10R10_UNORM_PACK32 (64) | VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

I chose the first format in my list which held VK_FORMAT_B8G8R8A8_UNORM as a format and VK_COLOR_SPACE_SRGB_NONLINEAR_KHR as its' color space.

Swapchain Image Count: 3

vkCreateGraphicsPipelines API_DUMP:

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 000001E04862E6F0
    pipelineCache:                  VkPipelineCache = 0000000000000000
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 00000083DADCEA20
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 00000083DADCEA20:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 00000083DADCE690
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 00000083DADCE690:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:                         VkShaderModule = DD3A8A0000000015
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 00000083DADCE6C0:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:                         VkShaderModule = D897D90000000016
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 00000083DADCE708:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 0
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = NULL
                vertexAttributeDescriptionCount: uint32_t = 0
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = NULL
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 00000083DADCE758:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 00000083DADCE7F8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = 00000083DADCE798
                    pViewports[0]:                  const VkViewport = 00000083DADCE798:
                        x:                              float = 0
                        y:                              float = 0
                        width:                          float = 1280
                        height:                         float = 768
                        minDepth:                       float = 0
                        maxDepth:                       float = 1
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = 00000083DADCE7C8
                    pScissors[0]:                   const VkRect2D = 00000083DADCE7C8:
                        offset:                         VkOffset2D = 00000083DADCE7C8:
                            x:                              int32_t = 0
                            y:                              int32_t = 0
                        extent:                         VkExtent2D = 00000083DADCE7D0:
                            width:                          uint32_t = 1280
                            height:                         uint32_t = 768
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 00000083DADCE850:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 0 (VK_CULL_MODE_NONE)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 00000083DADCE8A8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 0
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 00000083DADCE900:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 1
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_LESS_OR_EQUAL (3)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 00000083DADCE928:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 00000083DADCE944:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 0
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 00000083DADCE9C8:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 00000083DADCE988
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 00000083DADCE988:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 00000083DADCE9F0
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = NULL
            layout:                         VkPipelineLayout = 9FDE6B0000000014
            renderPass:                     VkRenderPass = D5B26F0000000010
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0000000000000000
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 00000083DADCF5E8
        pPipelines[0]:                  VkPipeline = 84C0580000000017